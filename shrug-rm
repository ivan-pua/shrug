#!/bin/dash
# Main function: Remove files from index and/or current directory

# shrug-rm is the inverse of a shrug-add command.
# It should stop the user from accidentally losing work, 
# and should give an error message instead if the removal 
# would cause the user to lose work.

# remove files based on the flag invoked (if any)
deleteBasedOnFlag() {

    # only got cachedFlag - delete file in index
    if test $cachedFlag -eq 1 && test $forcedFlag -eq 0 ## correct way of writing
    then 
        rm .shrug/index/"$@"
        continue
    fi

    # only got forced flag - delete file in index and curr dir
    if test $cachedFlag -eq 0 && test $forcedFlag -eq 1
    then
        rm .shrug/index/"$@"
        rm "$@"
        continue
    fi

    # both cached and forced flag - delete file in index and curr dir
    # no warnings
    if test $cachedFlag -eq 1 && test $forcedFlag -eq 1
    then
        rm .shrug/index/"$@"
        continue
    fi
}

####### Main function starts here ########

# Checks if .shrug repo exists
if ! test -d ".shrug"
then 
    echo ""$0": error: no .shrug directory containing shrug repository exists"
    exit 1
fi

# check for latest version of commit, 
# gives error message when there are no commits yet
if ! test -d .shrug/commit.0
then 
    echo ""$0": error: your repository does not have any commits yet"
    exit 1 
else 
    version=$(ls -d .shrug/commit.* | sed 's/.*it.//g' | sort -n | tail -1)

fi

# check if there are 0 arguments
if [ $# -eq 0 ]
then 
    echo "usage: "$0" [--force] [--cached] <filenames>"
    exit 1
fi

# identify flags from user (if any)
if [ "$1" = "--force" ]
then

    if [ "$2" = "--cached" ]
    then 
        cachedFlag=1
        forcedFlag=1   
        shift
    else 
        cachedFlag=0
        forcedFlag=1
    fi
    # set -- "${@:2}" # dash does not support string substition 
    shift # this works - essentially removes the first element from "$@"; 
          # this is a shell built-in

elif [ "$1" = "--cached" ]
then 
    cachedFlag=1
    forcedFlag=0
    shift 
else
    forcedFlag=0 ; cachedFlag=0
fi

# remove files
for file in "$@"
do
    # version=$(find .shrug/commit.* -type f -name "$file" | \
    #           sed -r 's|/[^/]+$||'| cut -d"." -f3 \| sort -n | tail -1 )

    # check if filename is valid - only has alphanumeric, 
    # or * indicating all files in current dir
    if echo "$file" | grep -E "[^A-Za-z0-9._-]"  > /dev/null 
    then
        echo ""$0": error: invalid filename '"$file"'"
        exit 1
    fi

    # if the file is absent in the index, warn
    if ! test -e .shrug/index/"$file"
    then
        echo ""$0": error: '"$file"' is not in the shrug repository"
        exit 1
    else
        # if file is present in index but not in working dir, delete from index
        if ! test -e "$file"
        then
            rm .shrug/index/"$file"
            exit 0
        fi
    fi
    
    # MAIN TESTING SECTION
    #check if the file exists in the latest commit 
    if test -e .shrug/commit.$version/"$file"
    then  

        # check for diff of file in index and latest commit
        if diff .shrug/index/"$file" .shrug/commit.$version/"$file" > /dev/null
        then 

            # if same, check for diff between working dir and index
            if diff "$file" .shrug/index/"$file" > /dev/null
            then
                deleteBasedOnFlag "$file"
                # if no flags are invoked,
                # delete file in both curr dir and index
                rm .shrug/index/"$file" "$file"
                continue

            else # if file in working dir is different from index and commit
                deleteBasedOnFlag "$file"
                # give this warning if no flags are invoked
                echo ""$0": error: '"$file"' in repository is different to working file"
                exit 1
            fi
        else 
            
            # if file in index and latest commit are diff, 
            # check if working dir and index/repo are same           
            if diff "$file" .shrug/index/"$file" > /dev/null 
            then
                # same
                deleteBasedOnFlag "$file"
                echo ""$0": error: '"$file"' has changes staged in the index" 
                exit 1
            else
                # SPECIAL CASE 
                # if file in commit, index and curr dir are all different
                # both --cached and normal usage of rm should give warning

                # if only force flag, remove file in index and curr dir
                if test $cachedFlag -eq 0 && test $forcedFlag -eq 1
                then
                    rm .shrug/index/"$@"
                    rm "$@"
                    continue

                # if force and cached flag is invoked, 
                # remove file in index
                elif test $cachedFlag -eq 1 && test $forcedFlag -eq 1
                then
                    rm .shrug/index/"$@"
                    continue
                else
                    echo ""$0": error: '"$file"' in index is different to both working file and repository"
                    exit 1
                fi
            fi
            # exit
        fi

    else 
        # same as above!
        # if file not present in latest commit, 
        # check if working dir and index/repo are same 
        if diff "$file" .shrug/index/"$file" > /dev/null 
        then
            # same
            deleteBasedOnFlag "$file"
            echo ""$0": error: '"$file"' has changes staged in the index" 
            exit 1
        else
            
            # SPECIAL CASE 
            # if file in commit, index and curr dir are all different
            # both --cached and normal usage of rm should give warning

            # if only force flag, remove file in index and curr dir 
            if test $cachedFlag -eq 0 && test $forcedFlag -eq 1
            then
                rm .shrug/index/"$@"
                rm "$@"
                continue

            # if force and cached flag is invoked, 
            # remove file in index 
            elif test $cachedFlag -eq 1 && test $forcedFlag -eq 1
            then
                rm .shrug/index/"$@"
                continue
            else
                echo ""$0": error: '"$file"' in index is different to both working file and repository"
                exit 1
            fi
        fi
    fi    

done

