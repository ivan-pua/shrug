#!/bin/dash
# Main function: Save a working copy as a "commit"

# copy files from index to a latest commit folder
copyToCommitFolder() {

    # check if there are any changes which requires a commit
    if test $currVersion -gt 0 && diff .shrug/commit.$prevVersion .shrug/index > /dev/null
    then 
        echo "nothing to commit"
        exit 0
    fi
    
    # once there are changes, create a new folder to store changes
    mkdir .shrug/commit."$currVersion"
    
    # An empty commit after a non-empty commit is possible.
    # this if statement checks if index is empty.
    # if it is empty, create an empty commmit, else copy the files from index
    if [ -z "$(ls -A .shrug/index)" ] 
    then
        continue 
    else 
        for file in .shrug/index/*
        do
            cp "$file" .shrug/commit."$currVersion"
        done
    fi
    
    # prepend the commit message into the log.txt file
    if [ $currVersion -ne 0 ]
    then        
        printf '%s\n%s\n' "$currVersion $message" "$(cat .shrug/log.txt)" > .shrug/log.txt
    else
        echo "$currVersion $message" > .shrug/log.txt
    fi
}

# if -a flag is invoked, this function copies files from curr dir to index 
# copies files from index to latest commit directory 
commit() {

    currVersion="$1"
    message="$2"
    prevVersion=$(($currVersion-1))

    # checks if user invokes -a flag
    if [ $flag -eq 1 ] 
    then
        # copy file from curr dir into index first 
        for file in .shrug/index/*
        do
            file=$(echo "$file" | sed 's/.*index.//g')
            
            if ! test -e "$file"  
            then
                # remove file from index if the it's absent in the curr dir
                rm .shrug/index/"$file"
                continue
            fi
            # copy file
            cp "$file" .shrug/index/    
        done
        
        copyToCommitFolder
    
    else # -a flag not invoked
        copyToCommitFolder        
    fi
}

# Check validity of arguments
checkArgs() {
    
    # only accepts 2 or 3 arguments
    # the -a flag must be the first argument 
    # -m flag can be the first or second argument,
    # but -m flag must be there 
    if [ "$#" -eq 2 ]
    then
        if [ "$1" != "-m" ]
        then
            echo "usage: "$0" [-a] -m commit-message"
            exit 1
        fi
        message="$2"
        flag=0
    elif [ "$#" -eq 3 ]
    then
        if [ "$1" != "-a" -o "$2" != "-m" ]
        then
            echo "usage: "$0" [-a] -m commit-message"
            exit 1
        fi
        message="$3"
        flag=1 # this is initialized when -a flag is invoked 
    else
            echo "usage: "$0" [-a] -m commit-message"
            exit 1

    fi

    # Checks if message has new lines
    numLines=`echo "$message" | wc -l`
    if [ $numLines -gt 1 ]
    then 
        echo ""$0": error: commit message can not contain a newline"
        exit 1
    fi

}

####### Main function starts here ########

# Checks if .shrug dir exists
if ! test -d ".shrug"
then 
    echo ""$0": error: no .shrug directory containing shrug repository exists"
    exit 1
fi
    
checkArgs "$@"

# checks if there is already an initial commit (0)
# if there is, create a new commit
if test -d .shrug/commit.0 
then 
    # check for the latest version
    version=$(ls -d .shrug/commit.* | sed 's/.*t.//g' | sort -n | tail -1)
    version=$(($version+1))

    commit $version "$message"
    echo "Committed as commit "$version""

else    # create first version 

    # empty commit at the first commit is NOT possible
    # this checks if index is empty during the initial commit
    if [ -z "$(ls -A .shrug/index)" ] 
    then
        echo "nothing to commit"
        exit 0
    fi

    touch .shrug/log.txt
    commit 0 "$message"
    echo "Committed as commit 0"
fi
